"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "_ssr_src_lib_api_ts";
exports.ids = ["_ssr_src_lib_api_ts"];
exports.modules = {

/***/ "(ssr)/./src/lib/api.ts":
/*!************************!*\
  !*** ./src/lib/api.ts ***!
  \************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   getHistoricalAccuracy: () => (/* binding */ getHistoricalAccuracy),\n/* harmony export */   getModelWeights: () => (/* binding */ getModelWeights),\n/* harmony export */   getNominees: () => (/* binding */ getNominees),\n/* harmony export */   runPredictions: () => (/* binding */ runPredictions)\n/* harmony export */ });\n/* harmony import */ var _constants__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./constants */ \"(ssr)/./src/lib/constants.ts\");\n\n/**\n * Fetches nominees data for the given year\n */ async function getNominees(year = _constants__WEBPACK_IMPORTED_MODULE_0__.CURRENT_OSCAR_YEAR) {\n    try {\n        const response = await fetch(`/api/nominees?year=${year}`);\n        if (!response.ok) {\n            throw new Error(\"Failed to fetch nominees\");\n        }\n        return await response.json();\n    } catch (error) {\n        console.error(\"Error fetching nominees:\", error);\n        return {};\n    }\n}\n/**\n * Fetches model weights data for prediction strength visualization\n */ async function getModelWeights(year = _constants__WEBPACK_IMPORTED_MODULE_0__.CURRENT_OSCAR_YEAR) {\n    try {\n        const response = await fetch(`/api/model-weights?year=${year}`);\n        if (!response.ok) {\n            throw new Error(\"Failed to fetch model weights\");\n        }\n        return await response.json();\n    } catch (error) {\n        console.error(\"Error fetching model weights:\", error);\n        return [];\n    }\n}\n/**\n * Fetches historical predictions accuracy data\n */ async function getHistoricalAccuracy() {\n    try {\n        const response = await fetch(\"/api/historical-accuracy\");\n        if (!response.ok) {\n            throw new Error(\"Failed to fetch historical accuracy\");\n        }\n        return await response.json();\n    } catch (error) {\n        console.error(\"Error fetching historical accuracy:\", error);\n        return [];\n    }\n}\n/**\n * Triggers a predictions calculation for the current year\n */ async function runPredictions() {\n    try {\n        const response = await fetch(\"/api/run-predictions\", {\n            method: \"POST\",\n            headers: {\n                \"Content-Type\": \"application/json\"\n            },\n            body: JSON.stringify({\n                year: _constants__WEBPACK_IMPORTED_MODULE_0__.CURRENT_OSCAR_YEAR\n            })\n        });\n        if (!response.ok) {\n            throw new Error(\"Failed to run predictions\");\n        }\n        return await response.json();\n    } catch (error) {\n        console.error(\"Error running predictions:\", error);\n        throw error;\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9zcmMvbGliL2FwaS50cyIsIm1hcHBpbmdzIjoiOzs7Ozs7OztBQUNpRDtBQUVqRDs7Q0FFQyxHQUNNLGVBQWVDLFlBQVlDLE9BQWVGLDBEQUFrQjtJQUNqRSxJQUFJO1FBQ0YsTUFBTUcsV0FBVyxNQUFNQyxNQUFNLENBQUMsbUJBQW1CLEVBQUVGLEtBQUssQ0FBQztRQUN6RCxJQUFJLENBQUNDLFNBQVNFLEVBQUUsRUFBRTtZQUNoQixNQUFNLElBQUlDLE1BQU07UUFDbEI7UUFDQSxPQUFPLE1BQU1ILFNBQVNJLElBQUk7SUFDNUIsRUFBRSxPQUFPQyxPQUFPO1FBQ2RDLFFBQVFELEtBQUssQ0FBQyw0QkFBNEJBO1FBQzFDLE9BQU8sQ0FBQztJQUNWO0FBQ0Y7QUFFQTs7Q0FFQyxHQUNNLGVBQWVFLGdCQUFnQlIsT0FBZUYsMERBQWtCO0lBQ3JFLElBQUk7UUFDRixNQUFNRyxXQUFXLE1BQU1DLE1BQU0sQ0FBQyx3QkFBd0IsRUFBRUYsS0FBSyxDQUFDO1FBQzlELElBQUksQ0FBQ0MsU0FBU0UsRUFBRSxFQUFFO1lBQ2hCLE1BQU0sSUFBSUMsTUFBTTtRQUNsQjtRQUNBLE9BQU8sTUFBTUgsU0FBU0ksSUFBSTtJQUM1QixFQUFFLE9BQU9DLE9BQU87UUFDZEMsUUFBUUQsS0FBSyxDQUFDLGlDQUFpQ0E7UUFDL0MsT0FBTyxFQUFFO0lBQ1g7QUFDRjtBQUVBOztDQUVDLEdBQ00sZUFBZUc7SUFDcEIsSUFBSTtRQUNGLE1BQU1SLFdBQVcsTUFBTUMsTUFBTTtRQUM3QixJQUFJLENBQUNELFNBQVNFLEVBQUUsRUFBRTtZQUNoQixNQUFNLElBQUlDLE1BQU07UUFDbEI7UUFDQSxPQUFPLE1BQU1ILFNBQVNJLElBQUk7SUFDNUIsRUFBRSxPQUFPQyxPQUFPO1FBQ2RDLFFBQVFELEtBQUssQ0FBQyx1Q0FBdUNBO1FBQ3JELE9BQU8sRUFBRTtJQUNYO0FBQ0Y7QUFFQTs7Q0FFQyxHQUNNLGVBQWVJO0lBQ3BCLElBQUk7UUFDRixNQUFNVCxXQUFXLE1BQU1DLE1BQU0sd0JBQXdCO1lBQ25EUyxRQUFRO1lBQ1JDLFNBQVM7Z0JBQ1AsZ0JBQWdCO1lBQ2xCO1lBQ0FDLE1BQU1DLEtBQUtDLFNBQVMsQ0FBQztnQkFBRWYsTUFBTUYsMERBQWtCQTtZQUFDO1FBQ2xEO1FBRUEsSUFBSSxDQUFDRyxTQUFTRSxFQUFFLEVBQUU7WUFDaEIsTUFBTSxJQUFJQyxNQUFNO1FBQ2xCO1FBRUEsT0FBTyxNQUFNSCxTQUFTSSxJQUFJO0lBQzVCLEVBQUUsT0FBT0MsT0FBTztRQUNkQyxRQUFRRCxLQUFLLENBQUMsOEJBQThCQTtRQUM1QyxNQUFNQTtJQUNSO0FBQ0YiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly93b3Jrc3BhY2UvLi9zcmMvbGliL2FwaS50cz8yZmFiIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IE5vbWluZWVEYXRhIH0gZnJvbSAnLi4vY29tcG9uZW50cy9Ob21pbmVlQ2FyZCc7XG5pbXBvcnQgeyBDVVJSRU5UX09TQ0FSX1lFQVIgfSBmcm9tICcuL2NvbnN0YW50cyc7XG5cbi8qKlxuICogRmV0Y2hlcyBub21pbmVlcyBkYXRhIGZvciB0aGUgZ2l2ZW4geWVhclxuICovXG5leHBvcnQgYXN5bmMgZnVuY3Rpb24gZ2V0Tm9taW5lZXMoeWVhcjogbnVtYmVyID0gQ1VSUkVOVF9PU0NBUl9ZRUFSKTogUHJvbWlzZTxSZWNvcmQ8c3RyaW5nLCBOb21pbmVlRGF0YVtdPj4ge1xuICB0cnkge1xuICAgIGNvbnN0IHJlc3BvbnNlID0gYXdhaXQgZmV0Y2goYC9hcGkvbm9taW5lZXM/eWVhcj0ke3llYXJ9YCk7XG4gICAgaWYgKCFyZXNwb25zZS5vaykge1xuICAgICAgdGhyb3cgbmV3IEVycm9yKCdGYWlsZWQgdG8gZmV0Y2ggbm9taW5lZXMnKTtcbiAgICB9XG4gICAgcmV0dXJuIGF3YWl0IHJlc3BvbnNlLmpzb24oKTtcbiAgfSBjYXRjaCAoZXJyb3IpIHtcbiAgICBjb25zb2xlLmVycm9yKCdFcnJvciBmZXRjaGluZyBub21pbmVlczonLCBlcnJvcik7XG4gICAgcmV0dXJuIHt9O1xuICB9XG59XG5cbi8qKlxuICogRmV0Y2hlcyBtb2RlbCB3ZWlnaHRzIGRhdGEgZm9yIHByZWRpY3Rpb24gc3RyZW5ndGggdmlzdWFsaXphdGlvblxuICovXG5leHBvcnQgYXN5bmMgZnVuY3Rpb24gZ2V0TW9kZWxXZWlnaHRzKHllYXI6IG51bWJlciA9IENVUlJFTlRfT1NDQVJfWUVBUik6IFByb21pc2U8YW55PiB7XG4gIHRyeSB7XG4gICAgY29uc3QgcmVzcG9uc2UgPSBhd2FpdCBmZXRjaChgL2FwaS9tb2RlbC13ZWlnaHRzP3llYXI9JHt5ZWFyfWApO1xuICAgIGlmICghcmVzcG9uc2Uub2spIHtcbiAgICAgIHRocm93IG5ldyBFcnJvcignRmFpbGVkIHRvIGZldGNoIG1vZGVsIHdlaWdodHMnKTtcbiAgICB9XG4gICAgcmV0dXJuIGF3YWl0IHJlc3BvbnNlLmpzb24oKTtcbiAgfSBjYXRjaCAoZXJyb3IpIHtcbiAgICBjb25zb2xlLmVycm9yKCdFcnJvciBmZXRjaGluZyBtb2RlbCB3ZWlnaHRzOicsIGVycm9yKTtcbiAgICByZXR1cm4gW107XG4gIH1cbn1cblxuLyoqXG4gKiBGZXRjaGVzIGhpc3RvcmljYWwgcHJlZGljdGlvbnMgYWNjdXJhY3kgZGF0YVxuICovXG5leHBvcnQgYXN5bmMgZnVuY3Rpb24gZ2V0SGlzdG9yaWNhbEFjY3VyYWN5KCk6IFByb21pc2U8YW55PiB7XG4gIHRyeSB7XG4gICAgY29uc3QgcmVzcG9uc2UgPSBhd2FpdCBmZXRjaCgnL2FwaS9oaXN0b3JpY2FsLWFjY3VyYWN5Jyk7XG4gICAgaWYgKCFyZXNwb25zZS5vaykge1xuICAgICAgdGhyb3cgbmV3IEVycm9yKCdGYWlsZWQgdG8gZmV0Y2ggaGlzdG9yaWNhbCBhY2N1cmFjeScpO1xuICAgIH1cbiAgICByZXR1cm4gYXdhaXQgcmVzcG9uc2UuanNvbigpO1xuICB9IGNhdGNoIChlcnJvcikge1xuICAgIGNvbnNvbGUuZXJyb3IoJ0Vycm9yIGZldGNoaW5nIGhpc3RvcmljYWwgYWNjdXJhY3k6JywgZXJyb3IpO1xuICAgIHJldHVybiBbXTtcbiAgfVxufVxuXG4vKipcbiAqIFRyaWdnZXJzIGEgcHJlZGljdGlvbnMgY2FsY3VsYXRpb24gZm9yIHRoZSBjdXJyZW50IHllYXJcbiAqL1xuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIHJ1blByZWRpY3Rpb25zKCk6IFByb21pc2U8YW55PiB7XG4gIHRyeSB7XG4gICAgY29uc3QgcmVzcG9uc2UgPSBhd2FpdCBmZXRjaCgnL2FwaS9ydW4tcHJlZGljdGlvbnMnLCB7XG4gICAgICBtZXRob2Q6ICdQT1NUJyxcbiAgICAgIGhlYWRlcnM6IHtcbiAgICAgICAgJ0NvbnRlbnQtVHlwZSc6ICdhcHBsaWNhdGlvbi9qc29uJ1xuICAgICAgfSxcbiAgICAgIGJvZHk6IEpTT04uc3RyaW5naWZ5KHsgeWVhcjogQ1VSUkVOVF9PU0NBUl9ZRUFSIH0pXG4gICAgfSk7XG4gICAgXG4gICAgaWYgKCFyZXNwb25zZS5vaykge1xuICAgICAgdGhyb3cgbmV3IEVycm9yKCdGYWlsZWQgdG8gcnVuIHByZWRpY3Rpb25zJyk7XG4gICAgfVxuICAgIFxuICAgIHJldHVybiBhd2FpdCByZXNwb25zZS5qc29uKCk7XG4gIH0gY2F0Y2ggKGVycm9yKSB7XG4gICAgY29uc29sZS5lcnJvcignRXJyb3IgcnVubmluZyBwcmVkaWN0aW9uczonLCBlcnJvcik7XG4gICAgdGhyb3cgZXJyb3I7XG4gIH1cbn0iXSwibmFtZXMiOlsiQ1VSUkVOVF9PU0NBUl9ZRUFSIiwiZ2V0Tm9taW5lZXMiLCJ5ZWFyIiwicmVzcG9uc2UiLCJmZXRjaCIsIm9rIiwiRXJyb3IiLCJqc29uIiwiZXJyb3IiLCJjb25zb2xlIiwiZ2V0TW9kZWxXZWlnaHRzIiwiZ2V0SGlzdG9yaWNhbEFjY3VyYWN5IiwicnVuUHJlZGljdGlvbnMiLCJtZXRob2QiLCJoZWFkZXJzIiwiYm9keSIsIkpTT04iLCJzdHJpbmdpZnkiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./src/lib/api.ts\n");

/***/ })

};
;