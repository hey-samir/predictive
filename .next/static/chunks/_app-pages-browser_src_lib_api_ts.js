"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(self["webpackChunk_N_E"] = self["webpackChunk_N_E"] || []).push([["_app-pages-browser_src_lib_api_ts"],{

/***/ "(app-pages-browser)/./src/lib/api.ts":
/*!************************!*\
  !*** ./src/lib/api.ts ***!
  \************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   getHistoricalAccuracy: function() { return /* binding */ getHistoricalAccuracy; },\n/* harmony export */   getModelWeights: function() { return /* binding */ getModelWeights; },\n/* harmony export */   getNominees: function() { return /* binding */ getNominees; },\n/* harmony export */   runPredictions: function() { return /* binding */ runPredictions; }\n/* harmony export */ });\n/* harmony import */ var _constants__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./constants */ \"(app-pages-browser)/./src/lib/constants.ts\");\n\n/**\n * Fetches nominees data for the given year\n */ async function getNominees() {\n    let year = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : _constants__WEBPACK_IMPORTED_MODULE_0__.CURRENT_OSCAR_YEAR;\n    try {\n        const response = await fetch(\"/api/nominees?year=\".concat(year));\n        if (!response.ok) {\n            throw new Error(\"Failed to fetch nominees\");\n        }\n        return await response.json();\n    } catch (error) {\n        console.error(\"Error fetching nominees:\", error);\n        return {};\n    }\n}\n/**\n * Fetches model weights data for prediction strength visualization\n */ async function getModelWeights() {\n    let year = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : _constants__WEBPACK_IMPORTED_MODULE_0__.CURRENT_OSCAR_YEAR;\n    try {\n        const response = await fetch(\"/api/model-weights?year=\".concat(year));\n        if (!response.ok) {\n            throw new Error(\"Failed to fetch model weights\");\n        }\n        return await response.json();\n    } catch (error) {\n        console.error(\"Error fetching model weights:\", error);\n        return [];\n    }\n}\n/**\n * Fetches historical predictions accuracy data\n */ async function getHistoricalAccuracy() {\n    try {\n        const response = await fetch(\"/api/historical-accuracy\");\n        if (!response.ok) {\n            throw new Error(\"Failed to fetch historical accuracy\");\n        }\n        return await response.json();\n    } catch (error) {\n        console.error(\"Error fetching historical accuracy:\", error);\n        return [];\n    }\n}\n/**\n * Triggers a predictions calculation for the current year\n */ async function runPredictions() {\n    try {\n        const response = await fetch(\"/api/run-predictions\", {\n            method: \"POST\",\n            headers: {\n                \"Content-Type\": \"application/json\"\n            },\n            body: JSON.stringify({\n                year: _constants__WEBPACK_IMPORTED_MODULE_0__.CURRENT_OSCAR_YEAR\n            })\n        });\n        if (!response.ok) {\n            throw new Error(\"Failed to run predictions\");\n        }\n        return await response.json();\n    } catch (error) {\n        console.error(\"Error running predictions:\", error);\n        throw error;\n    }\n}\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL3NyYy9saWIvYXBpLnRzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7O0FBQ2lEO0FBRWpEOztDQUVDLEdBQ00sZUFBZUM7UUFBWUMsT0FBQUEsaUVBQWVGLDBEQUFrQkE7SUFDakUsSUFBSTtRQUNGLE1BQU1HLFdBQVcsTUFBTUMsTUFBTSxzQkFBMkIsT0FBTEY7UUFDbkQsSUFBSSxDQUFDQyxTQUFTRSxFQUFFLEVBQUU7WUFDaEIsTUFBTSxJQUFJQyxNQUFNO1FBQ2xCO1FBQ0EsT0FBTyxNQUFNSCxTQUFTSSxJQUFJO0lBQzVCLEVBQUUsT0FBT0MsT0FBTztRQUNkQyxRQUFRRCxLQUFLLENBQUMsNEJBQTRCQTtRQUMxQyxPQUFPLENBQUM7SUFDVjtBQUNGO0FBRUE7O0NBRUMsR0FDTSxlQUFlRTtRQUFnQlIsT0FBQUEsaUVBQWVGLDBEQUFrQkE7SUFDckUsSUFBSTtRQUNGLE1BQU1HLFdBQVcsTUFBTUMsTUFBTSwyQkFBZ0MsT0FBTEY7UUFDeEQsSUFBSSxDQUFDQyxTQUFTRSxFQUFFLEVBQUU7WUFDaEIsTUFBTSxJQUFJQyxNQUFNO1FBQ2xCO1FBQ0EsT0FBTyxNQUFNSCxTQUFTSSxJQUFJO0lBQzVCLEVBQUUsT0FBT0MsT0FBTztRQUNkQyxRQUFRRCxLQUFLLENBQUMsaUNBQWlDQTtRQUMvQyxPQUFPLEVBQUU7SUFDWDtBQUNGO0FBRUE7O0NBRUMsR0FDTSxlQUFlRztJQUNwQixJQUFJO1FBQ0YsTUFBTVIsV0FBVyxNQUFNQyxNQUFNO1FBQzdCLElBQUksQ0FBQ0QsU0FBU0UsRUFBRSxFQUFFO1lBQ2hCLE1BQU0sSUFBSUMsTUFBTTtRQUNsQjtRQUNBLE9BQU8sTUFBTUgsU0FBU0ksSUFBSTtJQUM1QixFQUFFLE9BQU9DLE9BQU87UUFDZEMsUUFBUUQsS0FBSyxDQUFDLHVDQUF1Q0E7UUFDckQsT0FBTyxFQUFFO0lBQ1g7QUFDRjtBQUVBOztDQUVDLEdBQ00sZUFBZUk7SUFDcEIsSUFBSTtRQUNGLE1BQU1ULFdBQVcsTUFBTUMsTUFBTSx3QkFBd0I7WUFDbkRTLFFBQVE7WUFDUkMsU0FBUztnQkFDUCxnQkFBZ0I7WUFDbEI7WUFDQUMsTUFBTUMsS0FBS0MsU0FBUyxDQUFDO2dCQUFFZixNQUFNRiwwREFBa0JBO1lBQUM7UUFDbEQ7UUFFQSxJQUFJLENBQUNHLFNBQVNFLEVBQUUsRUFBRTtZQUNoQixNQUFNLElBQUlDLE1BQU07UUFDbEI7UUFFQSxPQUFPLE1BQU1ILFNBQVNJLElBQUk7SUFDNUIsRUFBRSxPQUFPQyxPQUFPO1FBQ2RDLFFBQVFELEtBQUssQ0FBQyw4QkFBOEJBO1FBQzVDLE1BQU1BO0lBQ1I7QUFDRiIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9zcmMvbGliL2FwaS50cz8yZmFiIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IE5vbWluZWVEYXRhIH0gZnJvbSAnLi4vY29tcG9uZW50cy9Ob21pbmVlQ2FyZCc7XG5pbXBvcnQgeyBDVVJSRU5UX09TQ0FSX1lFQVIgfSBmcm9tICcuL2NvbnN0YW50cyc7XG5cbi8qKlxuICogRmV0Y2hlcyBub21pbmVlcyBkYXRhIGZvciB0aGUgZ2l2ZW4geWVhclxuICovXG5leHBvcnQgYXN5bmMgZnVuY3Rpb24gZ2V0Tm9taW5lZXMoeWVhcjogbnVtYmVyID0gQ1VSUkVOVF9PU0NBUl9ZRUFSKTogUHJvbWlzZTxSZWNvcmQ8c3RyaW5nLCBOb21pbmVlRGF0YVtdPj4ge1xuICB0cnkge1xuICAgIGNvbnN0IHJlc3BvbnNlID0gYXdhaXQgZmV0Y2goYC9hcGkvbm9taW5lZXM/eWVhcj0ke3llYXJ9YCk7XG4gICAgaWYgKCFyZXNwb25zZS5vaykge1xuICAgICAgdGhyb3cgbmV3IEVycm9yKCdGYWlsZWQgdG8gZmV0Y2ggbm9taW5lZXMnKTtcbiAgICB9XG4gICAgcmV0dXJuIGF3YWl0IHJlc3BvbnNlLmpzb24oKTtcbiAgfSBjYXRjaCAoZXJyb3IpIHtcbiAgICBjb25zb2xlLmVycm9yKCdFcnJvciBmZXRjaGluZyBub21pbmVlczonLCBlcnJvcik7XG4gICAgcmV0dXJuIHt9O1xuICB9XG59XG5cbi8qKlxuICogRmV0Y2hlcyBtb2RlbCB3ZWlnaHRzIGRhdGEgZm9yIHByZWRpY3Rpb24gc3RyZW5ndGggdmlzdWFsaXphdGlvblxuICovXG5leHBvcnQgYXN5bmMgZnVuY3Rpb24gZ2V0TW9kZWxXZWlnaHRzKHllYXI6IG51bWJlciA9IENVUlJFTlRfT1NDQVJfWUVBUik6IFByb21pc2U8YW55PiB7XG4gIHRyeSB7XG4gICAgY29uc3QgcmVzcG9uc2UgPSBhd2FpdCBmZXRjaChgL2FwaS9tb2RlbC13ZWlnaHRzP3llYXI9JHt5ZWFyfWApO1xuICAgIGlmICghcmVzcG9uc2Uub2spIHtcbiAgICAgIHRocm93IG5ldyBFcnJvcignRmFpbGVkIHRvIGZldGNoIG1vZGVsIHdlaWdodHMnKTtcbiAgICB9XG4gICAgcmV0dXJuIGF3YWl0IHJlc3BvbnNlLmpzb24oKTtcbiAgfSBjYXRjaCAoZXJyb3IpIHtcbiAgICBjb25zb2xlLmVycm9yKCdFcnJvciBmZXRjaGluZyBtb2RlbCB3ZWlnaHRzOicsIGVycm9yKTtcbiAgICByZXR1cm4gW107XG4gIH1cbn1cblxuLyoqXG4gKiBGZXRjaGVzIGhpc3RvcmljYWwgcHJlZGljdGlvbnMgYWNjdXJhY3kgZGF0YVxuICovXG5leHBvcnQgYXN5bmMgZnVuY3Rpb24gZ2V0SGlzdG9yaWNhbEFjY3VyYWN5KCk6IFByb21pc2U8YW55PiB7XG4gIHRyeSB7XG4gICAgY29uc3QgcmVzcG9uc2UgPSBhd2FpdCBmZXRjaCgnL2FwaS9oaXN0b3JpY2FsLWFjY3VyYWN5Jyk7XG4gICAgaWYgKCFyZXNwb25zZS5vaykge1xuICAgICAgdGhyb3cgbmV3IEVycm9yKCdGYWlsZWQgdG8gZmV0Y2ggaGlzdG9yaWNhbCBhY2N1cmFjeScpO1xuICAgIH1cbiAgICByZXR1cm4gYXdhaXQgcmVzcG9uc2UuanNvbigpO1xuICB9IGNhdGNoIChlcnJvcikge1xuICAgIGNvbnNvbGUuZXJyb3IoJ0Vycm9yIGZldGNoaW5nIGhpc3RvcmljYWwgYWNjdXJhY3k6JywgZXJyb3IpO1xuICAgIHJldHVybiBbXTtcbiAgfVxufVxuXG4vKipcbiAqIFRyaWdnZXJzIGEgcHJlZGljdGlvbnMgY2FsY3VsYXRpb24gZm9yIHRoZSBjdXJyZW50IHllYXJcbiAqL1xuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIHJ1blByZWRpY3Rpb25zKCk6IFByb21pc2U8YW55PiB7XG4gIHRyeSB7XG4gICAgY29uc3QgcmVzcG9uc2UgPSBhd2FpdCBmZXRjaCgnL2FwaS9ydW4tcHJlZGljdGlvbnMnLCB7XG4gICAgICBtZXRob2Q6ICdQT1NUJyxcbiAgICAgIGhlYWRlcnM6IHtcbiAgICAgICAgJ0NvbnRlbnQtVHlwZSc6ICdhcHBsaWNhdGlvbi9qc29uJ1xuICAgICAgfSxcbiAgICAgIGJvZHk6IEpTT04uc3RyaW5naWZ5KHsgeWVhcjogQ1VSUkVOVF9PU0NBUl9ZRUFSIH0pXG4gICAgfSk7XG4gICAgXG4gICAgaWYgKCFyZXNwb25zZS5vaykge1xuICAgICAgdGhyb3cgbmV3IEVycm9yKCdGYWlsZWQgdG8gcnVuIHByZWRpY3Rpb25zJyk7XG4gICAgfVxuICAgIFxuICAgIHJldHVybiBhd2FpdCByZXNwb25zZS5qc29uKCk7XG4gIH0gY2F0Y2ggKGVycm9yKSB7XG4gICAgY29uc29sZS5lcnJvcignRXJyb3IgcnVubmluZyBwcmVkaWN0aW9uczonLCBlcnJvcik7XG4gICAgdGhyb3cgZXJyb3I7XG4gIH1cbn0iXSwibmFtZXMiOlsiQ1VSUkVOVF9PU0NBUl9ZRUFSIiwiZ2V0Tm9taW5lZXMiLCJ5ZWFyIiwicmVzcG9uc2UiLCJmZXRjaCIsIm9rIiwiRXJyb3IiLCJqc29uIiwiZXJyb3IiLCJjb25zb2xlIiwiZ2V0TW9kZWxXZWlnaHRzIiwiZ2V0SGlzdG9yaWNhbEFjY3VyYWN5IiwicnVuUHJlZGljdGlvbnMiLCJtZXRob2QiLCJoZWFkZXJzIiwiYm9keSIsIkpTT04iLCJzdHJpbmdpZnkiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(app-pages-browser)/./src/lib/api.ts\n"));

/***/ })

}]);